import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.FileWriter;
import java.io.IOException;

public class CidadeFrame extends javax.swing.JFrame {

    private JTextField txtLugar, txtPopulação, txtPessoa;
    private JButton btnCriar;

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CidadeFrame.class.getName());

    /**
     * Creates new form PessoaFrame
     */
    public CidadeFrame() {
        super("Cadastro de Cidade");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(400, 250);
        setLocationRelativeTo(null);

        // Painel principal
        JPanel painel = new JPanel();
        painel.setLayout(new GridBagLayout());
        GridBagConstraints c = new GridBagConstraints();
        c.insets = new Insets(5, 5, 5, 5); // espaço entre componentes
        c.fill = GridBagConstraints.HORIZONTAL;

        // Lugar
        c.gridx = 0;
        c.gridy = 0;
        painel.add(new JLabel("Lugar:"), c);
        c.gridx = 1;
        txtLugar = new JTextField(20);
        painel.add(txtLugar, c);

        // População
        c.gridx = 0;
        c.gridy = 1;
        painel.add(new JLabel("População:"), c);
        c.gridx = 1;
        txtPopulação = new JTextField(20);
        painel.add(txtPopulação, c);

        // Pessoa
        c.gridx = 0;
        c.gridy = 2;
        painel.add(new JLabel("Pessoa:"), c);
        c.gridx = 1;
        txtPessoa = new JTextField(20);
        painel.add(txtPessoa, c);

        // Botão
        c.gridx = 0;
        c.gridy = 3;
        c.gridwidth = 2; // botão ocupa duas colunas
        btnCriar = new JButton("Criar Viagem");
        painel.add(btnCriar, c);

        add(painel);

        // Evento do botão
        btnCriar.addActionListener(e -> {
//            String lugar = "txtLugar.getText();
//            int população = Integer.parseInt(txtPopulação.getText());
//            String pessoa = txtPessoa.getText();
            Cidade cidade = new Cidade(txtLugar.getText(), Integer.parseInt(txtPopulação.getText()), txtPessoa.getText());

            JOptionPane.showMessageDialog(this, "Lugar criado: " + cidade.getPessoa() + " está viajando para " + cidade.getLugar() + " com população de " + cidade.getPopulacao() + " habitantes.");

            try (FileWriter writer = new FileWriter("cidade.csv", true)) {
                writer.write(cidade.getLugar() + "," + cidade.getPopulacao() + "," + cidade.getPessoa() + "\n");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Erro ao salvar no CSV!");
            }
        });
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        SwingUtilities.invokeLater(() -> {
            CidadeFrame frame = new CidadeFrame();
            frame.setVisible(true);
        });
    }
}

// Variables declaration - do not modify
// End of variables declaration

